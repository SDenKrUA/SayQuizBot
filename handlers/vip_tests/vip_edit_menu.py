# handlers/vip_tests/vip_edit_menu.py
import os
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes

from .vip_ui import _images_prompt_kb

async def vip_edit_open(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –í—ñ–¥–∫—Ä–∏–≤–∞—î –º–µ–Ω—é —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –æ–±—Ä–∞–Ω–æ–≥–æ VIP-—Ç–µ—Å—Ç—É:
    - –ü–µ—Ä–µ–∑–∞–ø–∏—Å —Ç–µ—Å—Ç—É (JSON)
    - –î–æ–¥–∞—Ç–∏ –∞—Ä—Ö—ñ–≤ –∑ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ (ZIP)
    - –î–æ–¥–∞—Ç–∏ –æ–∫—Ä–µ–º–∏–π —Ñ–∞–π–ª (image/audio/video/doc) ‚Üí –ø–æ–ø—Ä–æ—Å–∏–º–æ –Ω–æ–º–µ—Ä –ø–∏—Ç–∞–Ω–Ω—è
    - –í–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ —Ñ–∞–π–ª–∏ –º–µ–¥—ñ–∞—Ç–µ–∫–∏ —Ç–µ—Å—Ç—É (image*/audio*/video*/doc*)
    - –î–æ–≤—ñ—Ä–µ–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ
    - –ó–º—ñ–Ω–∏—Ç–∏ —Ä–æ–∑–¥—ñ–ª (–ø–µ—Ä–µ–º—ñ—Å—Ç–∏—Ç–∏ —Ç–µ—Å—Ç —Ü—ñ–ª–∫–æ–º)
    """
    query = update.callback_query
    await query.answer()

    idx_str = (query.data.split("|", 1)[1] if "|" in query.data else "").strip()
    try:
        idx = int(idx_str)
    except ValueError:
        return

    items = context.user_data.get("vip_mytests") or []
    if not (0 <= idx < len(items)):
        await query.message.reply_text("‚ùå –¢–µ—Å—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return

    name = items[idx]["name"]
    kb = InlineKeyboardMarkup([
        [InlineKeyboardButton("‚úèÔ∏è –ü–µ—Ä–µ–∑–∞–ø–∏—Å —Ç–µ—Å—Ç—É", callback_data=f"vip_edit_rewrite|{idx}")],
        [InlineKeyboardButton("üñº –î–æ–¥–∞—Ç–∏ –∞—Ä—Ö—ñ–≤ –∑ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ (ZIP)", callback_data=f"vip_edit_addimgs|{idx}")],
        [InlineKeyboardButton("üìÑ –î–æ–¥–∞—Ç–∏ –æ–∫—Ä–µ–º–∏–π —Ñ–∞–π–ª", callback_data=f"vip_edit_addfile|{idx}")],
        [InlineKeyboardButton("üßπ –í–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ —Ñ–∞–π–ª–∏", callback_data=f"vip_media_wipe|{idx}")],
        [InlineKeyboardButton("üë• –î–æ–≤—ñ—Ä–µ–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ", callback_data=f"vip_trusted|{idx}")],
        [InlineKeyboardButton("üìÇ –ó–º—ñ–Ω–∏—Ç–∏ —Ä–æ–∑–¥—ñ–ª", callback_data=f"vip_edit_move|{idx}")],
        [InlineKeyboardButton("‚ùå –ó–∞–∫—Ä–∏—Ç–∏", callback_data="vip_cancel")],
    ])
    await query.message.reply_text(f"‚öôÔ∏è –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç—É ¬´{name}¬ª. –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=kb)

async def vip_edit_rewrite_from_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–°—Ç–∞—Ä—Ç—É—î —Å—Ü–µ–Ω–∞—Ä—ñ–π –ø–µ—Ä–µ–∑–∞–ø–∏—Å—É (–∞–Ω–∞–ª–æ–≥ vip_rewrite|idx)."""
    query = update.callback_query
    await query.answer()

    idx_str = (query.data.split("|", 1)[1] if "|" in query.data else "").strip()
    try:
        idx = int(idx_str)
    except ValueError:
        return

    items = context.user_data.get("vip_mytests") or []
    if not (0 <= idx < len(items)):
        await query.message.reply_text("‚ùå –¢–µ—Å—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return

    target = items[idx]
    context.user_data["vip_rewrite_target"] = target
    context.user_data["awaiting_vip_rewrite"] = True
    await query.message.reply_text(
        f"‚úèÔ∏è –ü–µ—Ä–µ–∑–∞–ø–∏—Å —Ç–µ—Å—Ç—É **{target['name']}**.\n"
        "–ù–∞–¥—ñ—à–ª—ñ—Ç—å –Ω–æ–≤–∏–π —Ñ–∞–π–ª JSON –¥–ª—è —Ü—å–æ–≥–æ —Ç–µ—Å—Ç—É."
    )

async def vip_edit_add_images_from_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–í–º–∏–∫–∞—î —Ä–µ–∂–∏–º –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è ZIP-–∞—Ä—Ö—ñ–≤—É –∑ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ –¥–ª—è –æ–±—Ä–∞–Ω–æ–≥–æ —Ç–µ—Å—Ç—É."""
    query = update.callback_query
    await query.answer()

    idx_str = (query.data.split("|", 1)[1] if "|" in query.data else "").strip()
    try:
        idx = int(idx_str)
    except ValueError:
        return

    items = context.user_data.get("vip_mytests") or []
    if not (0 <= idx < len(items)):
        await query.message.reply_text("‚ùå –¢–µ—Å—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")
        return

    item = items[idx]
    name = item["name"]
    abs_dir = item["abs_dir"]

    context.user_data["vip_images_dir"] = os.path.join(abs_dir, name)
    context.user_data["awaiting_vip_images"] = True

    await query.message.reply_text(
        "üì¶ –ù–∞–¥—ñ—à–ª—ñ—Ç—å –∞—Ä—Ö—ñ–≤ –∫–∞—Ä—Ç–∏–Ω–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ ZIP (*.zip).\n"
        "–Ü–º–µ–Ω–∞ –º–∞—é—Ç—å –º—ñ—Å—Ç–∏—Ç–∏ –Ω–æ–º–µ—Ä –ø–∏—Ç–∞–Ω–Ω—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, image12.jpg, 12.png).",
        reply_markup=_images_prompt_kb()
    )
