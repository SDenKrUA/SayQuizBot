import html
from typing import Dict, Any, Optional, Tuple

def format_question_text(
    q: Dict[str, Any],
    highlight: Optional[Tuple[int, bool]] = None,
    hide_correct_on_wrong: bool = False,
    show_correct_if_no_highlight: bool = False
) -> str:
    """
    –§–æ—Ä–º–∞—Ç—É—î —Ç–µ–∫—Å—Ç –ø–∏—Ç–∞–Ω–Ω—è –∑ HTML —Ä–æ–∑–º—ñ—Ç–∫–æ—é.

    Args:
        q: –°–ª–æ–≤–Ω–∏–∫ –∑ –¥–∞–Ω–∏–º–∏ –ø–∏—Ç–∞–Ω–Ω—è
        highlight: –ö–æ—Ä—Ç–µ–∂ (—ñ–Ω–¥–µ–∫—Å –æ–±—Ä–∞–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ, —á–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–∞)
        hide_correct_on_wrong: –ß–∏ –ø—Ä–∏—Ö–æ–≤—É–≤–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
        show_correct_if_no_highlight: –Ø–∫—â–æ True —ñ highlight=None ‚Äî –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å (–≤–∏–¥—ñ–ª—è—Ç–∏ –∂–∏—Ä–Ω–∏–º + ‚úÖ)

    Returns:
        –í—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–∏–π HTML —Ç–µ–∫—Å—Ç
    """
    text = f"<b>{html.escape(q.get('question',''))}</b>\n\n"
    letters = ["A", "B", "C", "D"]

    picked_idx = None
    picked_is_correct = None
    if highlight is not None:
        picked_idx, picked_is_correct = highlight

    # –í–∏–∑–Ω–∞—á–∏–º–æ —ñ–Ω–¥–µ–∫—Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ (–¥–ª—è –æ–±–æ—Ö —Ñ–æ—Ä–º–∞—Ç—ñ–≤)
    answers = q.get("answers", [])
    correct_idx = None
    if isinstance(answers, list) and answers:
        for i, a in enumerate(answers[:4]):
            if isinstance(a, dict) and a.get("correct"):
                correct_idx = i
                break
    else:
        # –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ñ —Ñ–æ—Ä–º–∞—Ç–∏
        correct_idx = q.get("answer")

    for i, a in enumerate(answers or []):
        if i >= len(letters):
            break

        letter = letters[i]
        # –í–∏—Ç—è–≥–Ω—É—Ç–∏ —Ç–µ–∫—Å—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        if isinstance(a, dict):
            ans_text = a.get("text") or a.get("answer") or a.get("value") or a.get("content") or ""
            if not isinstance(ans_text, str):
                ans_text = str(ans_text)
        else:
            ans_text = str(a)

        ans_text = html.escape(ans_text)
        is_correct = (i == correct_idx)

        emoji = ""
        bold = False

        if highlight is not None:
            # –ü—ñ—Å–ª—è –≤–∏–±–æ—Ä—É
            if is_correct:
                if not (hide_correct_on_wrong and not picked_is_correct):
                    bold = True
                    emoji = "‚úÖ"
            if i == picked_idx:
                emoji = "‚úÖ" if picked_is_correct else "‚ùå"
                if not picked_is_correct:
                    bold = False
        else:
            # –†–µ–∂–∏–º –±–µ–∑ highlight (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –ø–æ–∫–∞–∑ –∑ –ø–æ—à—É–∫—É)
            if show_correct_if_no_highlight and is_correct:
                bold = True
                emoji = "‚úÖ"

        if bold:
            line = f"{emoji} <b>{letter}) {ans_text}</b>"
        else:
            line = f"{emoji} {letter}) {ans_text}"

        text += line + "\n\n"

    if highlight is not None and q.get("explanation"):
        text += f"\nüí° <i>{html.escape(q['explanation'])}</i>\n"

    return text
